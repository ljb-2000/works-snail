/**
 * 
 * @authors luozh@snail.com
 * @date    2015-11-04 09:57:45
 * @msg     屏幕展示页js
 */

$(function() {

    // 选择屏幕动画效果
    (function() {
        $('.game-wrap li').hover(function() {
            var e = $(this).find('.showbar');

            e.next().stop().animate({
                "bottom": "0"
            }, 400);
        }, function() {
            var e = $(this).find('.showbar');

            e.next().stop().animate({
                "bottom": "-74px"
            }, 400);
        });
    })();

    // 进入屏幕效果
    $('.game-wrap .layer').on('click', function() {
        var that = $(this),
            productName = that.prev().find('b').text(),
            txt = null;

        $('.screen-product').html(productName);

        $('#search-screen').val('');

        refreshList(productName, txt, that);
    });

    // 查询屏幕ajax
    $('#search-screen').on('input', function() {
        var txt = $(this).val(),
            productName = $('.screen-product').text();

        refreshList(productName, txt);
    });

    // 刷新屏幕列表
    function refreshList(productName, txt, that) {
        $.ajax({
                url: '/screen_list/ajax_get_screens_by_product/',
                type: 'POST',
                dataType: 'json',
                data: {
                    product_name: productName,
                    txt: txt
                }
            })
            .done(function(data) {
                var screenList = '';

                data.forEach(function(e) {
                    screenList += '<a href="#" data-tab="' + e.id + '" class="list-group-item">' + e.name + '</a>';
                });

                $('.screen-list-wrap').empty().append(screenList);

                if (!txt && that) {
                    that.parents('.game-wrap').slideUp(400).next().show();
                }

            })
            .fail(function() {
                showAlert('jError', '出错了 :(', false);
            });
    }

    // 返回产品列表
    $('#go_back_screen').on('click', function() {
        $(this).parents('.screen-wrap').slideUp(400).prev().slideDown(400);
    });

    // 增加标签页
    function addTab(tabArr, valueArr, dataArr, chartArr) {
        var obj = $('#my_tabs a[href="#' + tabArr + '"]');

        if (obj.length) {
            obj.tab('show');
        } else {
            $('#my_tabs').append('<li role="presentation" style="position: relative;">\
                    <i class="glyphicon glyphicon-remove mytab-close"></i>\
                    <a href="#' + tabArr + '" aria-controls="' + tabArr + '" role="tab" data-toggle="tab" style="padding-right: 24px;">\
                        ' + valueArr + '\
                    </a>\
                </li>');

            $('#my_contents').append('<div role="tabpanel" class="tab-pane" id="' + tabArr + '"></div>');

            $('#my_tabs a:last').tab('show');

            var $tab = $('#' + tabArr),
                warp = null;

            $tab.append(dataArr);

            autoChartBar();

            warp = $tab.find('.charts-wrap');


            chartArr.forEach(function(data, index) {
                var param = {
                        header: data[0].header,
                        chartId: data[0].g_id,
                        graphId: data[0].graph_id,
                        graphType: data[0].graph_type
                    },
                    id = tabArr + '_' + param.graphId + '_' + param.chartId + '_' + param.graphType;

                createChart(warp, index, index); // 渲染chart html模板 

                var chart = $('#' + tabArr).find('div[data-index="' + index + '"]');

                chart.find('.panel-title').html(param.header);
                chart.find('.chart-box').prop('id', id);

                setCharts(id, data); // 渲染chart 绘图模板

                setList(id, data); // 渲染 chart底部list
            });
        }

        $('.screen-wrap').slideUp(400).prev().slideDown(400);
    }

    // 点击屏幕列表ajax
    $(document).off('click', '.screen-list-wrap a').on('click', '.screen-list-wrap a', function() {
        var that = $(this),
            tabArr = that.attr('data-tab'),
            productName = $('.screen-product').html(),
            valueArr = that.text() + '--' + productName;

        // TODO AJAX
        $.ajax({
                url: '/screen_list/ajax_show_screen/?screen_id=' + tabArr,
                type: 'GET',
                dataType: 'json'
            })
            .done(function(data) {
                var dataArr = data.html,
                    chartArr = data.series_list;

                addTab(tabArr, valueArr, dataArr, chartArr);
            })
            .fail(function() {
                showAlert('jError', '出错了 :(', false);
            });
    });

    // 点击tab刷新charts
    $(document).on('click', '#my_tabs a', function() {

    });

    // 渲染chart html模板
    function createChart(warp, index, num) {
        var html = '<div class="c-highchart panel panel-default" data-index=' + index + '>\
            <div class="panel-heading clearfix">\
                <h3 class="panel-title pull-left"></h3>\
                <div class="pull-right">\
                    <span class="view-larger glyphicon glyphicon-zoom-in"></span>&nbsp;&nbsp;\
                    <span class="get-sum glyphicon glyphicon-stats"></span>&nbsp;&nbsp;\
                    <span class="delete-chart glyphicon glyphicon-remove"></span>\
                </div>\
            </div>\
            <div class="panel-body">\
                <div class="chart-box">\
                </div>\
                <table class="table chart-table table-striped table-hover hide" style="color:#63524D;">\
                    <thead>\
                        <tr>\
                            <th width="250px"></th>\
                            <th width="80px">last</th>\
                            <th width="80px">min</th>\
                            <th width="80px">avg</th>\
                            <th width="80px">max</th>\
                        </tr>\
                    </thead>\
                    <tbody class="chart-list">\
                    </tbody>\
                </table>\
            </div>\
        </div>',
            box = warp.find('.c-highchart');

        if (!box.length) {
            warp.append(html);
        } else {
            if (num === 0) {
                box.eq(0).before(html);
            } else {
                box.eq(num - 1).after(html);
            }
        }
    }

    // 渲染chart 绘图模板
    function setCharts(id, data) {
        $('#' + id).highcharts({
            chart: {
                type: 'line',
                zoomType: 'x'
            },
            tooltip: {
                xDateFormat: '%Y-%m-%d %H:%M:%S',
                valueDecimals: 2
            },
            xAxis: {
                type: 'datetime',
                dateTimeLabelFormats: {
                    hour: '%H:%M'
                },
                minRange: 1000, // 不能放大超过1s
                minTickInterval: 1000 // 放大间隔最小为1s
            },
            yAxis: {
                max: data[0].y_max,
                min: data[0].y_min
            },
            series: data,
            title: {
                text: null
            }
        });
    }

    // 渲染 chart底部list
    function setList(id, data) {
        var chartList = $('#' + id).next().find('.chart-list'),
            list = '';

        data.forEach(function(e) {
            list += '<tr>\
                <td>' + e.name + '</td>\
                <td>' + Number(e.last).toFixed(2) + '</td>\
                <td>' + Number(e.min).toFixed(2) + '</td>\
                <td>' + Number(e.avg).toFixed(2) + '</td>\
                <td>' + Number(e.max).toFixed(2) + '</td>\
            </tr>';
        });

        chartList.append(list);
    }

    // 关闭标签页
    function deleteTab(that) {
        var e = that.parent(),
            prev = e.prev(),
            tabArr = that.next().attr('aria-controls'),
            panel = $('#my_contents').find('#' + tabArr);

        e.remove();
        panel.remove();
        prev.find('a').tab('show');
    }

    $(document).on('click', '.mytab-close', function() {
        deleteTab($(this));
    });

    // 右侧选中栏高度设定
    function autoChartBar() {
        var tabH = $(window).height();

        $(".screen-tool-bar").height(tabH);

        $(window).resize(function() {
            var tabH = $(window).height();

            $(".screen-tool-bar").height(tabH);
        });
    }

    // 右侧栏展开隐藏
    $(document).on("click", ".left-menu", function() {
        $(".screen-tool-bar").stop().animate({
            "right": "-345px"
        }, 600);
    });

    $(document).on("click", ".screen-tool-menu", function() {
        $(".screen-tool-bar").stop().animate({
            "right": "0"
        }, 600);
    });

    // 开启关闭自动切换tab
    (function() {
        var t = setInterval(autoTab, 300000);

        $('.time-switch').on('click', function() {
            var isChecked = $(this).find('input').prop('checked');

            if (!isChecked) {
                clearInterval(t);
            } else {
                t = setInterval(autoTab, 300000);
            }
        });

        function autoTab() {
            var tabNow = $('#my_tabs li.active'),
                index = tabNow.index(),
                len = $('#my_tabs li').length,
                scrollTop = $(window).scrollTop();

            tabNow.attr('data-top', scrollTop);

            if (index !== len && index) {
                tabNow.next('li').find('a').tab('show');

                var top = $('#my_tabs li.active').attr('data-top');

                $(window).scrollTop(top);
            }

            if (index === len) {
                $('#my_tabs a').eq(1).tab('show');

                var top = $('#my_tabs li.active').attr('data-top');

                $(window).scrollTop(top);
            }
        }
    })();

    // 关闭单个chart
    $(document).on('click', '.delete-chart', function() {
        var parent = $(this).parents('.c-highchart'),
            parents = $(this).parents('.tab-pane'),
            charts = parents.find('.c-highchart'),
            warp = parents.find('.charts-wrap'),
            tabArr = parents.prop('id'),
            id = parent.find('.chart-box').prop('id'),
            screenId = $(this).parents('.tab-pane').prop('id'),

            mum = $('#' + screenId).find('.screen-counter-table tbody'),
            obj = $('input[value = "' + id + '"]'),
            num = obj.parents('tr').prevAll('.checknow').length,

            index = charts.last().attr('data-index'),
            obj2 = mum.find('tr').eq(index).next('.checknow'),
            chartId = obj2.find(':checked').prop('value'),
            nextIndex = obj2.index(),
            nextnum = obj2.prevAll('.checknow').length - 1;


        parent.fadeOut('400', function() {
            $(this).remove();

            obj.prop('checked', false).parents('tr').removeClass('checknow');

            $('.chart-all-' + screenId).prop('checked', false);

            if (num <= 4 && mum.find('.checknow').length >= 4 && charts.length <= 4) {
                var pList = getParam(tabArr);

                appendChart(chartId, tabArr, warp, nextIndex, nextnum, pList);
            }
        });
    });

    // 获取参数 
    function getParam(tabArr) {
        var obj = $('#' + tabArr),
            list = {
                start: obj.find('.time-span').val(),
                cf: obj.find('.show-type').val(),
                sum: obj.find('.sum-switch .active input').attr('data-value')
            }

        return list;
    }

    // 修改参数ajax
    (function() {
        $(document).on('change', '.time-span, .show-type', function() {
            var e = $(this);

            modifyParam(e);
        });

        $(document).on('click', '.sum-switch label:not(".active")', function() {
            var e = $(this);

            modifyParam(e);
        });

        function modifyParam(e) {
            var tabArr = e.parents('.tab-pane').prop('id'),
                $tab = $('#' + tabArr),
                warp = $tab.find('.charts-wrap'),
                pList = getParam(tabArr),
                idTable = $tab.find('.screen-counter-table tbody'),
                idChecked = idTable.find(':checked'),
                idLen = idChecked.length,
                i;

            warp.empty(); 

            for (i = 0; i < idLen; i++) {
                var item = idChecked.eq(i),
                    chartId = item.prop('value'),
                    index = item.parents('tr').index(),
                    num = item.parents('tr').prevAll('.checknow').length;   

                appendChart(chartId, tabArr, warp, index, num, pList);

                if (i === 3) {
                    break;
                }
            }

        }
    })();

    // 滚动加载
    (function() {
        var isScroll = true;

        $(window).scroll(function() {
            var range = 50, // 距下边界长度  
                totalheight = 0,
                srollPos = $(window).scrollTop(); // 滚动条距顶部距离(页面超出窗口的高度)  

            if ($('#my_tabs li.active').index() !== 1) {
                totalheight = parseFloat($(window).height()) + parseFloat(srollPos);

                if (($(document).height() - range) <= totalheight) {

                    var tabNow = $('#my_tabs li.active'),
                        tabArr = tabNow.find('a').attr('aria-controls'),
                        $tab = $('#' + tabArr),
                        warp = $tab.find('.charts-wrap'),
                        charts = $tab.find('.chart-box'),
                        chartsLen = charts.length,
                        idTable = $tab.find('.screen-counter-table tbody'),
                        idChecked = idTable.find(':checked'),
                        idLen = idChecked.length,
                        idArr = [],
                        i;

                    if (idLen - chartsLen > 0 && isScroll) {
                        for (i = 0; i < idLen - chartsLen; i++) {
                            var cid = idChecked.eq(chartsLen + i).prop('value');

                            idArr.push(cid);
                        };

                        idArr.forEach(function(e) {
                            var index = $('input[value="' + e + '"]').parents('tr').prevAll().length,
                                num = $('input[value="' + e + '"]').parents('tr').prevAll('.checknow').length,
                                pList = getParam(tabArr);

                            appendChart(e, tabArr, warp, index, num, pList);
                        });
                    }
                }
            }
        });
    })();

    // 插图ajax
    function appendChart(chartId, tabArr, warp, index, num, pList) {
        createChart(warp, index, num);

        $.ajax({
                url: '/screen_list/ajax_get_graph_data/',
                type: 'POST',
                dataType: 'json',
                data: {
                    g_str: chartId,
                    start: pList.start,
                    cf: pList.cf,
                    sum: pList.sum
                }
            })
            .done(function(data) {
                var param = {
                        header: data[0].header,
                        chartId: data[0].g_id,
                        graphId: data[0].graph_id,
                        graphType: data[0].graph_type
                    },
                    id = tabArr + '_' + param.graphId + '_' + param.chartId + '_' + param.graphType;

                var chart = $('#' + tabArr).find('div[data-index="' + index + '"]');

                chart.find('.panel-title').html(param.header);
                chart.find('.chart-box').prop('id', id);

                setCharts(id, data); // 渲染chart 绘图模板

                setList(id, data); // 渲染 chart底部list

                if ($('#' + tabArr).find('.show-legend').hasClass('active')) {
                    chart.find('.chart-table').removeClass('hide');
                } else {
                    chart.find('.chart-table').addClass('hide');
                }
            })
            .fail(function() {
                showAlert('jError', '出错了 :(', false);
            });
    }

    // 侧边栏单选选中
    (function() {
        $(document).on('click', '.chart-it', function() {
            var e = $(this),
                chartId = e.prop('value'),
                tabNow = $('#my_tabs li.active'),
                tabArr = tabNow.find('a').attr('aria-controls'),
                warp = $('#' + tabArr).find('.charts-wrap');

            if (!e.prop('checked')) {
                $('#' + chartId).parents('.c-highchart').find('.delete-chart').trigger('click');
            } else {
                var index = e.parents('tr').prevAll().length,
                    num = e.parents('tr').prevAll('.checknow').length;

                if (!warp.find('div[data-index="' + index + '"]').length) {
                    var pList = getParam(tabArr);

                    appendChart(chartId, tabArr, warp, index, num, pList);
                }
            }
        });
    })();

    // 侧边栏全选反选
    (function() {
        $(document).on('click', '.chart-all', function() {
            var e = $(this),
                tabArr = e.parents('.screen-tool-bar').parent().prop('id'),
                warp = $(this).parents('.screen-tool-bar').siblings('.charts-wrap'),
                obj = e.parents('.screen-counter-table').find('tbody tr'),
                i,
                len;

            if (!e.prop('checked')) {
                warp.find('.c-highchart').remove();
            } else {
                warp.find('.c-highchart').remove();

                for (i = 0, len = obj.length; i < len; i++) {
                    var chartId = obj.eq(i).find(':checkbox').prop('value'),
                        pList = getParam(tabArr),
                        index = i,
                        num = i;

                    appendChart(chartId, tabArr, warp, index, num, pList);

                    if (i === 3) {
                        break;
                    }
                }
            }
        });
    })();

    // 显示隐藏legend
    $(document).on('click', '.legend-switch label', function() {
        var e= $(this),
            parents = e.parents('.tab-pane');

        if (e.hasClass('hide-legend')) {
            parents.find('.chart-table').addClass('hide');
        } else {
            parents.find('.chart-table').removeClass('hide');
        }
    });
});
